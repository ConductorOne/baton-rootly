While developing the connector, please fill out this form. This information is needed to write docs and to help other users set up the connector.

## Connector capabilities

1. What resources does the connector sync?
- Users
- Teams
- Secrets
- Schedules

2. Can the connector provision any resources? If so, which ones?
no, does not support resource provisioning

## Connector credentials 

1. What credentials or information are needed to set up the connector? (For example, API key, client ID and secret, domain, etc.)
- Rootly API Key
- ConductorOne client ID
- ConductorOne client secret

2. For each item in the list above: 

   * How does a user create or look up that credential or info? Please include links to (non-gated) documentation, screenshots (of the UI or of gated docs), or a video of the process. 

   * Does the credential need any specific scopes or permissions? If so, list them here. 

   * If applicable: Is the list of scopes or permissions different to sync (read) versus provision (read-write)? If so, list the difference here. 

   * What level of access or permissions does the user need in order to create the credentials? (For example, must be a super administrator, must have access to the admin console, etc.)  

Create an API Key:
1) Log in to Rootly
2) Navigate to the "Organization Settings" and click "API Keys"
    - Rootly supports 3 scopes of API Keys: Global, Team, Personal. We recommend creating a Global or Team API Key for the connector, which may require a Rootly Admin role. [Documentation](https://docs.rootly.com/api-reference/overview#how-to-generate-an-api-key%3F) for reference.
3) Click "Generate New API Key"
4) Give the new key a name, such as “ConductorOne” and click Create
5) Carefully copy and save the API key

Set up a Rootly as cloud-hosted connector:
- Standard setup steps, ie same as [pagerduty doc steps](https://www.conductorone.com/docs/product/integrations/pagerduty/#set-up-a-pagerduty-cloud-hosted-connector)
- need the Connector Administrator or Super Administrator role in ConductorOne
